{"version":3,"sources":["theme-context.tsx","components/theme-switch/index.tsx","components/header/index.tsx","components/container/index.tsx","components/input-search/index.tsx","components/country-card/index.tsx","pages/home/use-debounce.ts","pages/home/page.tsx","services/api.tsx","services/country/service.ts","pages/home/use-countries.ts","pages/home/index.tsx","pages/country/index.tsx","routes.tsx","App.tsx","index.tsx"],"names":["ThemeContext","createContext","theme","toggleDarkTheme","ThemeProvider","children","useState","setTheme","useCallback","currentState","value","useMemo","useEffect","document","body","classList","add","remove","Provider","ThemeSwitch","useContext","content","icon","text","onClick","className","Header","Container","InputSearch","placeholder","onChange","CountryCard","name","flag","population","region","capital","key","loading","src","alt","toLocaleString","createDebounce","timeout","wait","clear","undefined","clearTimeout","call","debounceCallback","forceWait","setTimeout","React","memo","countries","setLoading","search","setSearch","makeSearch","debounce","created","useDebounce","event","target","length","map","country","buildContent","api","url","options","fetch","method","response","json","data","ok","Promise","reject","INITIAL_STATE","location","history","state","setState","controllerRef","useRef","setCountries","a","current","abort","AbortController","signal","handleRequest","request","then","catch","service","findByName","findAll","useCountries","query","queryString","parse","handleSetSearch","queryParam","stringifyUrl","pathname","push","Country","Routes","basename","exact","path","component","Home","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.df6919c2.chunk.js","sourcesContent":["import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport withChildren from \"types/with-children\";\n\nexport const ThemeContext = createContext({\n  theme: \"light\",\n  toggleDarkTheme: () => {},\n});\n\nexport const useThemeContext = () => useContext(ThemeContext);\n\nexport function ThemeProvider({ children }: withChildren) {\n  const [theme, setTheme] = useState({\n    theme: \"light\",\n  });\n\n  const toggleDarkTheme = useCallback(() => {\n    setTheme((currentState) => ({\n      theme: currentState.theme === \"dark\" ? \"light\" : \"dark\",\n    }));\n  }, []);\n\n  const value = useMemo(\n    () => ({\n      theme: theme.theme,\n      toggleDarkTheme,\n    }),\n    [theme.theme, toggleDarkTheme]\n  );\n\n  useEffect(() => {\n    if (theme.theme === \"dark\") {\n      document.body.classList.add(\"dark-mode\");\n      document.body.classList.remove(\"light-mode\");\n    } else {\n      document.body.classList.add(\"light-mode\");\n      document.body.classList.remove(\"dark-mode\");\n    }\n  }, [theme]);\n\n  return (\n    <ThemeContext.Provider value={value}>{children}</ThemeContext.Provider>\n  );\n}\n","import React from \"react\";\nimport { useThemeContext } from \"theme-context\";\n\nimport \"./style.scss\";\n\nexport default function ThemeSwitch() {\n  const { theme, toggleDarkTheme } = useThemeContext();\n\n  const content =\n    theme === \"light\"\n      ? { icon: \"far fa-moon\", text: \"Dark Mode\" }\n      : { icon: \"far fa-sun\", text: \"Light Mode\" };\n  return (\n    <button onClick={toggleDarkTheme} className=\"theme-switch\">\n      <i className={content.icon}></i>\n      {content.text}\n    </button>\n  );\n}\n","import React from \"react\";\nimport ThemeSwitch from \"components/theme-switch\";\n\nimport \"./style.scss\";\n\nexport default function Header() {\n  return (\n    <header className=\"header\">\n      <h1>Where in the world?</h1>\n\n      <ThemeSwitch />\n    </header>\n  );\n}\n","import React from \"react\";\nimport withChildren from \"types/with-children\";\n\nimport \"./style.scss\";\n\nexport default function Container({ children }: withChildren) {\n  return <div className=\"container\">{children}</div>;\n}\n","import React from \"react\";\n\nimport \"./style.scss\";\n\nexport default function InputSearch({\n  placeholder,\n  className = \"\",\n  value,\n  onChange,\n}: {\n  className?: string;\n  placeholder?: string;\n  value: string;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}) {\n  return (\n    <label className={`input-search ${className}`}>\n      <i className=\"fas fa-search input-search__icon\"></i>\n      <input\n        placeholder={placeholder}\n        className=\"input-search__element\"\n        onChange={onChange}\n        value={value}\n      />\n    </label>\n  );\n}\n","import React from \"react\";\nimport Country from \"services/country/model\";\n\nimport \"./style.scss\";\n\nexport default function CountryCard({\n  name,\n  flag,\n  population,\n  region,\n  capital,\n}: Country) {\n  return (\n    <div key={name} className=\"country-card\">\n      <div className=\"country-card__image\">\n        <img loading=\"lazy\" src={flag} alt={`${name} flag`} />\n      </div>\n\n      <div className=\"country-card__content\">\n        <h2 className=\"country-card__title\">{name}</h2>\n\n        <ul>\n          <li>\n            <span className=\"country-card__label\">Population: </span>\n            <span className=\"country-card__value\">\n              {population.toLocaleString()}\n            </span>\n          </li>\n\n          <li>\n            <span className=\"country-card__label\">Region: </span>\n            <span className=\"country-card__value\">{region}</span>\n          </li>\n\n          <li>\n            <span className=\"country-card__label\">Capital: </span>\n            <span className=\"country-card__value\">{capital}</span>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n","import { useEffect, useMemo } from \"react\";\n\nexport function createDebounce(wait = 100) {\n  let timeout: NodeJS.Timeout | undefined;\n\n  const clear = () => {\n    if (timeout !== undefined) {\n      clearTimeout(timeout);\n      timeout = undefined;\n    }\n  };\n\n  const call = (\n    debounceCallback: (...arg: any[]) => any,\n    forceWait?: number\n  ) => {\n    clear();\n\n    timeout = setTimeout(() => {\n      debounceCallback();\n    }, forceWait || wait);\n  };\n\n  return {\n    call,\n    clear,\n    wait,\n  };\n}\n\nexport function useDebounce(wait: number = 100) {\n  const created = useMemo(() => createDebounce(wait), [wait]);\n\n  useEffect(() => {\n    return () => created.clear();\n  }, [created]);\n\n  return created.call;\n}\n","import React, { useEffect } from \"react\";\nimport Header from \"components/header\";\nimport Container from \"components/container\";\nimport InputSearch from \"components/input-search\";\nimport CountryCard from \"components/country-card\";\nimport Country from \"services/country/model\";\n\nimport \"./style.scss\";\nimport { useDebounce } from \"./use-debounce\";\n\ninterface Props {\n  countries: Country[];\n  loading: boolean;\n  search: string;\n  setSearch: (search?: string) => void;\n  makeSearch: (search?: string) => void;\n  setLoading: (loading: boolean) => void;\n}\n\nfunction Home({\n  countries,\n  loading,\n  setLoading,\n  search,\n  setSearch,\n  makeSearch,\n}: Props) {\n  const debounce = useDebounce(300);\n\n  useEffect(() => {\n    setLoading(true);\n\n    if (search) {\n      debounce(() => makeSearch(search));\n      return;\n    }\n\n    debounce(() => makeSearch(search), 0);\n  }, [search, setLoading, makeSearch, debounce]);\n\n  return (\n    <div>\n      <Header />\n\n      <Container>\n        <InputSearch\n          placeholder=\"Search for a country...\"\n          className=\"home__input\"\n          value={search}\n          onChange={(event) => setSearch(event.target.value)}\n        />\n\n        {buildContent(loading, countries)}\n      </Container>\n    </div>\n  );\n}\n\nfunction buildContent(loading: boolean, countries: Country[]) {\n  if (loading) {\n    return <div className=\"home--loading\">Loading...</div>;\n  }\n\n  if (!countries.length) {\n    return (\n      <div className=\"home--not-found\">\n        <div>\n          No countries found <strong>:(</strong>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"home\">\n      {countries.map((country) => (\n        <CountryCard key={country.name} {...country} />\n      ))}\n    </div>\n  );\n}\n\nexport default React.memo(Home);\n","export const api = {\n  async get<T>(url: string, options?: RequestInit) {\n    const response = await fetch(url, {\n      ...options,\n      method: \"GET\",\n    });\n    const data = {\n      data: (await response.json()) as T,\n      response,\n    };\n\n    if (response.ok) {\n      return data;\n    } else {\n      return Promise.reject(data);\n    }\n  },\n};\n","import { api } from \"services/api\";\nimport Country from \"./model\";\n\ninterface Options {\n  signal?: AbortSignal;\n}\n\nclass CountryService {\n  async findAll(options?: Options) {\n    const { data } = await api.get<Country[]>(\n      \"https://restcountries.eu/rest/v2/all\",\n      options\n    );\n    return data;\n  }\n\n  async findByName(name: string, options?: Options) {\n    const { data } = await api.get<Country[]>(\n      `https://restcountries.eu/rest/v2/name/${name}`,\n      options\n    );\n    return data;\n  }\n}\n\nexport default new CountryService();\n","import { useCallback, useRef, useState } from \"react\";\n\nimport Country from \"services/country/model\";\nimport service from \"services/country/service\";\n\nexport interface CountriesType {\n  countries: Country[];\n  loading: boolean;\n}\n\nconst INITIAL_STATE = {\n  countries: [],\n  loading: false,\n};\n\nexport interface useCountriesReturn {\n  state: CountriesType;\n  makeSearch: (search?: string | undefined) => Promise<void>;\n  setLoading: (loading: any) => void;\n}\n\nexport function useCountries(): useCountriesReturn {\n  const [state, setState] = useState<CountriesType>(INITIAL_STATE);\n  const controllerRef = useRef<AbortController | null>(null);\n\n  const setLoading = useCallback((loading) => {\n    setState((data) => ({ ...data, loading }));\n  }, []);\n\n  const setCountries = useCallback((countries) => {\n    setState((data) => ({ ...data, loading: false, countries }));\n  }, []);\n\n  const makeSearch = useCallback(\n    async (search?: string) => {\n      controllerRef.current?.abort();\n      controllerRef.current = new AbortController();\n      const options = {\n        signal: controllerRef.current.signal,\n      };\n\n      const handleRequest = (request: Promise<Country[]>) => {\n        request\n          .then(setCountries)\n          .then(() => (controllerRef.current = null))\n          .catch(() => setCountries([]));\n      };\n\n      setLoading(true);\n\n      if (search) {\n        await handleRequest(service.findByName(search, options));\n      } else {\n        await handleRequest(service.findAll(options));\n      }\n    },\n    [setCountries, setLoading]\n  );\n\n  return {\n    state,\n    makeSearch,\n    setLoading,\n  };\n}\n","import React, { useCallback, useMemo } from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport queryString from \"query-string\";\n\nimport Home from \"pages/home/page\";\nimport { useCountries } from \"./use-countries\";\n\nexport default function Container({ location, history }: RouteComponentProps) {\n  const { state, setLoading, makeSearch } = useCountries();\n  const query = useMemo<{ search?: string }>(\n    () => queryString.parse(location.search),\n    [location.search]\n  );\n\n  const handleSetSearch = useCallback(\n    (search?: string) => {\n      const queryParam = search ? { search } : {};\n      const url = queryString.stringifyUrl({\n        url: location.pathname,\n        query: queryParam,\n      });\n      history.push(url);\n    },\n    [history, location.pathname]\n  );\n\n  return (\n    <Home\n      search={query.search || \"\"}\n      countries={state.countries}\n      loading={state.loading}\n      setLoading={setLoading}\n      setSearch={handleSetSearch}\n      makeSearch={makeSearch}\n    />\n  );\n}\n","import React from \"react\";\n\nexport default function Country() {\n  return <div>Country</div>;\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Home from \"pages/home\";\nimport Country from \"pages/country\";\n\nexport default function Routes() {\n  return (\n    <Router basename=\"/react-countries-challenger\">\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/country\" component={Country} />\n      </Switch>\n    </Router>\n  );\n}\n","import React from \"react\";\nimport Routes from \"routes\";\nimport { ThemeProvider } from \"theme-context\";\n\nimport \"styles/base.scss\";\n\nfunction App() {\n  return (\n    <ThemeProvider>\n      <Routes />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
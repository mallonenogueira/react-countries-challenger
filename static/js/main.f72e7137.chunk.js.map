{"version":3,"sources":["theme-context.tsx","components/theme-switch/index.tsx","components/header/index.tsx","components/container/index.tsx","components/input-search/index.tsx","components/country-card/index.tsx","pages/home/page.tsx","services/api.tsx","pages/home/use-countries.tsx","services/country/service.tsx","pages/home/index.tsx","pages/country/index.tsx","routes.tsx","App.tsx","index.tsx"],"names":["ThemeContext","createContext","theme","toggleDarkTheme","ThemeProvider","children","useState","setTheme","useCallback","currentState","value","useMemo","useEffect","document","body","classList","add","remove","Provider","ThemeSwitch","useContext","content","icon","text","onClick","className","Header","Container","InputSearch","placeholder","onChange","CountryCard","name","flag","population","region","capital","key","src","alt","toLocaleString","formatPopulation","Home","search","countries","makeSearch","event","target","map","country","api","url","options","fetch","method","response","json","data","ok","Promise","reject","service","INITIAL_STATE","loading","undefined","props","state","setState","setLoading","setCountries","setSearch","findByName","then","findAll","useCountries","Country","Routes","basename","exact","path","component","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f72e7137.chunk.js","sourcesContent":["import React, {\n  createContext,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport withChildren from \"types/with-children\";\n\nexport const ThemeContext = createContext({\n  theme: \"light\",\n  toggleDarkTheme: () => {},\n});\n\nexport function ThemeProvider({ children }: withChildren) {\n  const [theme, setTheme] = useState({\n    theme: \"light\",\n  });\n\n  const toggleDarkTheme = useCallback(() => {\n    setTheme((currentState) => ({\n      theme: currentState.theme === \"dark\" ? \"light\" : \"dark\",\n    }));\n  }, []);\n\n  const value = useMemo(\n    () => ({\n      theme: theme.theme,\n      toggleDarkTheme,\n    }),\n    [theme.theme, toggleDarkTheme]\n  );\n\n  useEffect(() => {\n    if (theme.theme === \"dark\") {\n      document.body.classList.add(\"dark-mode\");\n      document.body.classList.remove(\"light-mode\");\n    } else {\n      document.body.classList.add(\"light-mode\");\n      document.body.classList.remove(\"dark-mode\");\n    }\n  }, [theme]);\n\n  return (\n    <ThemeContext.Provider value={value}>{children}</ThemeContext.Provider>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { ThemeContext } from \"theme-context\";\n\nimport \"./style.scss\";\n\nexport default function ThemeSwitch() {\n  const { theme, toggleDarkTheme } = useContext(ThemeContext);\n\n  const content =\n    theme === \"light\"\n      ? { icon: \"far fa-moon\", text: \"Dark Mode\" }\n      : { icon: \"far fa-sun\", text: \"Light Mode\" };\n\n  return (\n    <button onClick={toggleDarkTheme} className=\"theme-switch\">\n      <i className={content.icon}></i>\n      {content.text}\n    </button>\n  );\n}\n","import React from \"react\";\nimport ThemeSwitch from \"components/theme-switch\";\n\nimport \"./style.scss\";\n\nexport default function Header() {\n  return (\n    <header className=\"header\">\n      <h1>Where in the world?</h1>\n\n      <ThemeSwitch />\n    </header>\n  );\n}\n","import React from \"react\";\nimport withChildren from \"types/with-children\";\n\nimport \"./style.scss\";\n\nexport default function Container({ children }: withChildren) {\n  return <div className=\"container\">{children}</div>;\n}\n","import React from \"react\";\n\nimport \"./style.scss\";\n\nexport default function InputSearch({\n  placeholder,\n  className,\n  value,\n  onChange,\n}: {\n  className?: string;\n  placeholder?: string;\n  value: string;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}) {\n  return (\n    <label className={`input-search ${className || \"\"}`}>\n      <i className=\"fas fa-search input-search__icon\"></i>\n      <input\n        placeholder={placeholder}\n        className=\"input-search__element\"\n        onChange={onChange}\n        value={value}\n      />\n    </label>\n  );\n}\n","import React from \"react\";\nimport Country from \"services/country/model\";\n\nimport \"./style.scss\";\n\nfunction formatPopulation(population: number) {\n  return population.toLocaleString();\n}\n\nexport default function CountryCard({\n  name,\n  flag,\n  population,\n  region,\n  capital,\n}: Country) {\n  return (\n    <div key={name} className=\"country-card\">\n      <div className=\"country-card__image\">\n        <img src={flag} alt={`${name} flag`} />\n      </div>\n\n      <div className=\"country-card__content\">\n        <h2 className=\"country-card__title\">{name}</h2>\n\n        <div>\n          <span className=\"country-card__label\">Population: </span>\n          <span className=\"country-card__value\">\n            {formatPopulation(population)}\n          </span>\n        </div>\n\n        <div>\n          <span className=\"country-card__label\">Region: </span>\n          <span className=\"country-card__value\">{region}</span>\n        </div>\n\n        <div>\n          <span className=\"country-card__label\">Capital: </span>\n          <span className=\"country-card__value\">{capital}</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Header from \"components/header\";\nimport Container from \"components/container\";\nimport InputSearch from \"components/input-search\";\nimport CountryCard from \"components/country-card\";\nimport Country from \"services/country/model\";\n\nimport \"./style.scss\";\n\ninterface Props {\n  countries: Country[];\n  loading: boolean;\n  search: string;\n  makeSearch: (search?: string) => void;\n}\n\nexport default function Home({ search, countries, makeSearch }: Props) {\n  return (\n    <div>\n      <Header />\n\n      <Container>\n        <InputSearch\n          placeholder=\"Search for a country...\"\n          className=\"home__input\"\n          value={search}\n          onChange={(event) => makeSearch(event.target.value)}\n        />\n\n        <div className=\"home\">\n          {countries.map((country) => (\n            <CountryCard key={country.name} {...country} />\n          ))}\n        </div>\n      </Container>\n    </div>\n  );\n}\n","export const api = {\n  async get<T>(url: string, options?: RequestInit) {\n    const response = await fetch(url, {\n      ...options,\n      method: \"GET\",\n    });\n    const data = {\n      data: (await response.json()) as T,\n      response,\n    };\n\n    if (response.ok) {\n      return data;\n    } else {\n      return Promise.reject(data);\n    }\n  },\n};\n","import { useCallback, useEffect, useState } from \"react\";\n\nimport Country from \"services/country/model\";\nimport CountryService from \"services/country/service\";\n\nconst service = new CountryService();\n\ninterface CountriesType {\n  countries: Country[];\n  loading: boolean;\n  search?: string;\n}\n\nconst INITIAL_STATE = {\n  countries: [],\n  loading: false,\n  search: undefined,\n};\n\nexport function useCountries(props: { search: string }) {\n  const [state, setState] = useState<CountriesType>({\n    ...INITIAL_STATE,\n    ...props,\n  });\n\n  const setLoading = useCallback((loading) => {\n    setState((data) => ({ ...data, loading }));\n  }, []);\n\n  const setCountries = useCallback((countries) => {\n    setState((data) => ({ ...data, loading: false, countries }));\n  }, []);\n\n  const setSearch = useCallback((search) => {\n    setState((data) => ({ ...data, search }));\n  }, []);\n\n  const makeSearch = useCallback(\n    (search?: string) => {\n      setLoading(true);\n      setSearch(search);\n\n      if (search) {\n        service.findByName(search).then(setCountries);\n      } else {\n        service.findAll().then(setCountries);\n      }\n    },\n    [setCountries, setLoading, setSearch]\n  );\n\n  useEffect(() => {\n    makeSearch();\n  }, [makeSearch]);\n\n  return {\n    state,\n    makeSearch,\n  };\n}\n","import { api } from \"services/api\";\nimport Country from \"./model\";\n\nexport default class CountryService {\n  async findAll() {\n    const { data } = await api.get<Country[]>(\n      \"https://restcountries.eu/rest/v2/all\"\n    );\n    return data;\n  }\n\n  async findByName(name: string) {\n    const { data } = await api.get<Country[]>(\n      `https://restcountries.eu/rest/v2/name/${name}`\n    );\n    return data;\n  }\n}\n","import React from \"react\";\n\nimport Home from \"pages/home/page\";\nimport { useCountries } from \"./use-countries\";\n\nexport default function Container() {\n  const { state, makeSearch } = useCountries({ search: \"\" });\n\n  return (\n    <Home\n      search={state.search || \"\"}\n      countries={state.countries}\n      loading={state.loading}\n      makeSearch={makeSearch}\n    />\n  );\n}\n","import React from \"react\";\n\nexport default function Country() {\n  return <div>Country</div>;\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Home from \"pages/home\";\nimport Country from \"pages/country\";\n\nexport default function Routes() {\n  return (\n    <Router basename=\"/react-countries-challenger\">\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/country\" component={Country} />\n      </Switch>\n    </Router>\n  );\n}\n","import React from \"react\";\nimport Routes from \"routes\";\nimport { ThemeProvider } from \"theme-context\";\n\nimport \"styles/base.scss\";\n\nfunction App() {\n  return (\n    <ThemeProvider>\n      <Routes />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}